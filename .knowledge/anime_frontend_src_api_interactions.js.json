{"is_source_file": true, "format": "JavaScript", "description": "This file defines and exports multiple asynchronous functions for interacting with a backend API related to comments, likes, and playback progress for an anime viewer application. These functions handle API requests such as fetching comments, posting comments, retrieving and posting likes, and managing playback progress, with error handling via handleApiError.", "external_files": ["./client"], "external_methods": ["handleApiError"], "published": ["getComments", "postComment", "getLikes", "postLike", "getProgress", "setProgress"], "classes": [], "methods": [{"name": "getComments({ animeId, episodeId } = {})", "description": "Fetch comments optionally filtered by animeId and/or episodeId", "scope": "", "scopeKind": ""}, {"name": "postComment({ animeId, episodeId = null, userId = 'guest', content })", "description": "Create a new comment", "scope": "", "scopeKind": ""}, {"name": "getLikes(animeId, userId)", "description": "Get likes summary and whether current user liked", "scope": "", "scopeKind": ""}, {"name": "postLike({ animeId, userId = 'guest', like = true })", "description": "Like or unlike anime", "scope": "", "scopeKind": ""}, {"name": "getProgress({ animeId, userId = 'guest', episodeId })", "description": "Fetch saved playback progress", "scope": "", "scopeKind": ""}, {"name": "setProgress({ animeId, episodeId, userId = 'guest', progressSeconds })", "description": "Save playback progress", "scope": "", "scopeKind": ""}], "calls": ["client.get('/api/interactions/comments')", "client.post('/api/interactions/comments')", "client.get('/api/interactions/likes')", "client.post('/api/interactions/likes')", "client.get('/api/interactions/tracking')", "client.post('/api/interactions/tracking')"], "search-terms": ["comments API", "likes API", "progress tracking API", "interactions.js", "comments functions", "likes functions", "progress functions"], "state": 2, "file_id": 15, "knowledge_revision": 34, "git_revision": "", "ctags": [{"_type": "tag", "name": "getComments", "path": "/home/kavia/workspace/code-generation/anime-viewer-plus-159710-159719/anime_frontend/src/api/interactions.js", "pattern": "/^export async function getComments({ animeId, episodeId } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ animeId, episodeId } = {})"}, {"_type": "tag", "name": "getLikes", "path": "/home/kavia/workspace/code-generation/anime-viewer-plus-159710-159719/anime_frontend/src/api/interactions.js", "pattern": "/^export async function getLikes(animeId, userId) {$/", "language": "JavaScript", "kind": "function", "signature": "(animeId, userId)"}, {"_type": "tag", "name": "getProgress", "path": "/home/kavia/workspace/code-generation/anime-viewer-plus-159710-159719/anime_frontend/src/api/interactions.js", "pattern": "/^export async function getProgress({ animeId, userId = 'guest', episodeId }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ animeId, userId = 'guest', episodeId })"}, {"_type": "tag", "name": "postComment", "path": "/home/kavia/workspace/code-generation/anime-viewer-plus-159710-159719/anime_frontend/src/api/interactions.js", "pattern": "/^export async function postComment({ animeId, episodeId = null, userId = 'guest', content }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ animeId, episodeId = null, userId = 'guest', content })"}, {"_type": "tag", "name": "postLike", "path": "/home/kavia/workspace/code-generation/anime-viewer-plus-159710-159719/anime_frontend/src/api/interactions.js", "pattern": "/^export async function postLike({ animeId, userId = 'guest', like = true }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ animeId, userId = 'guest', like = true })"}, {"_type": "tag", "name": "setProgress", "path": "/home/kavia/workspace/code-generation/anime-viewer-plus-159710-159719/anime_frontend/src/api/interactions.js", "pattern": "/^export async function setProgress({ animeId, episodeId, userId = 'guest', progressSeconds }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ animeId, episodeId, userId = 'guest', progressSeconds })"}], "hash": "4a1a704b8ca3480d314b401a46f4c8ab", "format-version": 4, "code-base-name": "anime_frontend", "filename": "anime_frontend/src/api/interactions.js", "revision_history": [{"34": ""}]}